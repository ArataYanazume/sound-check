# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: audio.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x61udio.proto\x12\nsoundcheck\"!\n\x10RecognizeRequest\x12\r\n\x05\x61udio\x18\x01 \x01(\x0c\"#\n\x11RecognizeResponse\x12\x0e\n\x06result\x18\x01 \x01(\t2Y\n\x0bSimpleAudio\x12J\n\tRecognize\x12\x1c.soundcheck.RecognizeRequest\x1a\x1d.soundcheck.RecognizeResponse\"\x00\x42\x03\xf8\x01\x01\x62\x06proto3')



_RECOGNIZEREQUEST = DESCRIPTOR.message_types_by_name['RecognizeRequest']
_RECOGNIZERESPONSE = DESCRIPTOR.message_types_by_name['RecognizeResponse']
RecognizeRequest = _reflection.GeneratedProtocolMessageType('RecognizeRequest', (_message.Message,), {
  'DESCRIPTOR' : _RECOGNIZEREQUEST,
  '__module__' : 'audio_pb2'
  # @@protoc_insertion_point(class_scope:soundcheck.RecognizeRequest)
  })
_sym_db.RegisterMessage(RecognizeRequest)

RecognizeResponse = _reflection.GeneratedProtocolMessageType('RecognizeResponse', (_message.Message,), {
  'DESCRIPTOR' : _RECOGNIZERESPONSE,
  '__module__' : 'audio_pb2'
  # @@protoc_insertion_point(class_scope:soundcheck.RecognizeResponse)
  })
_sym_db.RegisterMessage(RecognizeResponse)

_SIMPLEAUDIO = DESCRIPTOR.services_by_name['SimpleAudio']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\370\001\001'
  _RECOGNIZEREQUEST._serialized_start=27
  _RECOGNIZEREQUEST._serialized_end=60
  _RECOGNIZERESPONSE._serialized_start=62
  _RECOGNIZERESPONSE._serialized_end=97
  _SIMPLEAUDIO._serialized_start=99
  _SIMPLEAUDIO._serialized_end=188
# @@protoc_insertion_point(module_scope)
